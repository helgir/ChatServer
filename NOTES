NOTES

TODO

(10%) It should be possible to send a private message to another user.

(15%) The creator of a room should be able to kick a user from a room. A user which has been kicked from a room can re-enter. The creator can also ban a user, which means (s)he won't be able to join the room again.


------------------------------------------------------
(15%) Each component (controller, factory, etc.) should be in a single file, but the files should be concatenated and minified when prepared for production, by using a grunt (or gulp) task.
(10%) All external dependencies (AngularJS etc.) should be installed using bower (EDIT: or npm)
(10%) The code should go through JSHint/JSLint without warnings. A grunt or gulp file should be included to ensure running jshint/jslint is easy. The following is an example of how jshint should be configured:

------------------------------------------------------

Auka

op
Allows the creator of a room to convert another user to a "op", i.e. grant that user the same priviledges as the creator of the room.
 
deop
Allows an op to "deop" another operator. Note: there is nothing that prevents the following events from happening: A creates a room, B joins, A ops B, B deops A.
 
setpassword
Sets a password for a room. Only an OP can perform this action.
 
removepassword
Reverts the "setpassword" command.
 
settopic
Sets a "topic" for a room. Only an OP can perform this action.
 
unban
Reverts the "ban" operation.


-------------
Því sem var breytt í chatserver.js

-            //Remove the user from the room roster.		
 -            delete rooms[opObj.room].users[opObj.user];